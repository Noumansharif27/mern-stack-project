const express = require("express");
const router = express.Router({ mergeParams: true });
const Review = require("../models/review.js");
const Course = require("../models/course.js");
const wrapAsync = require("../utils/wrapAsync");
const { validateReview } = require("../utils/middleware.js");

router.post(
  "/",
  wrapAsync(async (req, res, next) => {
    const { courseId } = req.params;
    const course = await Course.findById(courseId);
    if (!course) {
      // Handle invalid course ID
      return next(new Error("Course not found")); // Pass to error handler
    }

    const courseReview = new Review(req.body.review);
    courseReview.author = req.user._id;

    course.reviews.push(courseReview);
    await course.save();
    await courseReview.save();

    req.flash("success", "Review Added!");
    res.redirect(`/courses/${courseId}/show`);
  })
);

router.delete(
  "/:reviewId",
  wrapAsync(async (req, res) => {
    const { courseId, reviewId } = req.params;
    await Course.findByIdAndUpdate(courseId, { $pull: { reviews: reviewId } });
    await Review.findByIdAndDelete(reviewId);

    req.flash("success", "Review Deleted!");
    res.redirect(`/courses/${courseId}/show`);
  })
);

module.exports = router;
